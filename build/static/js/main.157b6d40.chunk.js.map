{"version":3,"sources":["component/Home.js","component/Retrive.js","App.js","index.js"],"names":["Home","useState","inputValue","setInputValue","inputForm","setInputForm","isLoading","setLoading","linkGen","a","pdfName","localStorage","getItem","removeItem","upload","e","preventDefault","formData","FormData","append","headers","axios","post","then","response","status","setItem","data","name","alert","catch","error","console","message","className","onSubmit","id","type","onChange","target","files","onClick","value","disabled","Retrive","useParams","method","responseType","file","Blob","fileURL","URL","createObjectURL","window","open","log","style","margin","App","path","exact","component","ReactDOM","render","document","querySelector"],"mappings":"mPA6DeA,MAzDf,WACI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAkBC,EAAlB,KAGMC,EAAO,uCAAG,4BAAAC,EAAA,sDACRC,EAAUC,aAAaC,QAAQ,eACnCT,EAAc,yCAAD,OAA0CO,IACvDC,aAAaE,WAAW,eAHZ,2CAAH,qDAKPC,EAAM,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,sDACZF,GAAW,GACVQ,EAAEC,kBACEC,EAAW,IAAIC,UACVC,OAAO,MAAOf,GACjBgB,EAAU,CAAE,eAAgB,sBAAuB,iBAAmB,GAC5EC,IACGC,KAAK,+CAAgDL,EAAU,CAAEG,QAASA,IAC1EG,MAAK,SAACC,GACLjB,GAAW,GACa,MAApBiB,EAASC,QACXd,aAAae,QAAQ,cAAeF,EAASG,KAAKC,MAClDC,MAAM,yBAENA,MAAM,gCAGTC,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,EAAME,YAjB7B,2CAAH,sDAmBZ,OACK,8BACI,sBAAKC,UAAU,YAAf,UACA,qBAAKA,UAAU,wBAAf,SACW,mDAEJ,uBAAMC,SAAU,SAACpB,GAAKD,EAAOC,IAAKqB,GAAG,WAArC,UACI,uBAAOC,KAAK,OAAOD,GAAG,SAAUE,SAAU,SAAAvB,GAAIV,EAAaU,EAAEwB,OAAOC,MAAM,KAAON,UAAU,aAAaN,KAAK,QAC7G,qBAAKM,UAAU,UAAf,SACA,gCAEA,yBAAQG,KAAK,SAASH,UAAU,WAAWE,GAAG,UAA9C,eAA8D9B,EAAY,mBAAG4B,UAAU,gCAAkC,GAAzH,eACA,wBAAQG,KAAM,SAASI,QAASjC,EAAS0B,UAAU,WAAWE,GAAG,SAAjE,kCAOA,uBAAOC,KAAK,OAAOK,MAAOxC,EAAYgC,UAAU,YAAYS,UAAQ,EAACP,GAAG,wBCrBjFQ,MA5Bf,WACI,IAAOR,EAAMS,cAANT,GAoBP,OAnBAf,IAAM,uDAAD,OAAwDe,GAAM,CAC/DU,OAAQ,MACRC,aAAc,SAGbxB,MAAK,SAAAC,GAEF,IAAMwB,EAAO,IAAIC,KAAK,CAACzB,EAASG,MAAO,CACvCU,KAAM,oBAGAa,EAAUC,IAAIC,gBAAgBJ,GAEpCK,OAAOC,KAAKJ,MAEfpB,OAAM,SAAAC,GACHC,QAAQuB,IAAIxB,MAIpB,8BACI,oBAAIyB,MAAO,CAACC,OAAO,QAAnB,sDCJOC,MAlBf,WACI,OAEK,cAAC,IAAD,UACI,eAAC,IAAD,WACD,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7D,IACjC,cAAC,IAAD,CAAO2D,KAAK,qBAAqBE,UAAWjB,IAC5C,cAAC,IAAD,CAAOe,KAAK,OAAOE,UAAW,WAAO,OAC/C,kDCPFC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,cAAc,Y","file":"static/js/main.157b6d40.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './home.css';\nimport axios from 'axios';\n\nfunction Home() {\n    const [inputValue, setInputValue] = useState('') \n    const [inputForm, setInputForm] = useState('') \n    const [isLoading, setLoading] = useState(false)\n\n\n    const linkGen = async () => {\n        let pdfName = localStorage.getItem('synlab-name');\n        setInputValue(`https://rv.synlab-pathcare.com/verify/${pdfName}`)\n        localStorage.removeItem('synlab-name')\n    }\n    const upload = async (e) => {\n       setLoading(true);\n        e.preventDefault();\n        let formData = new FormData();    //formdata object\n        formData.append('pdf', inputForm);   //append the values with key, value pair\n        const headers = { 'content-type': 'multipart/form-data', 'withCredentials': true, }\n        axios\n          .post(\"https://synlab-carepath.herokuapp.com/upload\", formData, { headers: headers})\n          .then((response) => { \n            setLoading(false);\n            if (response.status === 200) {\n              localStorage.setItem('synlab-name', response.data.name);\n              alert('Uploaded Succesfully')\n            } else {\n              alert(\"Please, use a valid file.\");\n            }\n          })\n          .catch((error) => console.error(error.message));\n      };\n    return (\n         <div>\n             <div className=\"container\">\n             <div className=\"text-center pt-5 pb-5\"> \n                        <h1> UPLOAD SECTION</h1>\n                    </div>\n                    <form onSubmit={(e)=>{upload(e)}} id=\"formElem\">   \n                        <input type=\"file\" id=\"myFile\"  onChange={e=>{setInputForm(e.target.files[0]);}} className=\"uploadform\" name=\"pdf\" /> \n                        <div className=\"pad-top\">    \n                        <div> \n                           \n                        <button type=\"submit\" className=\"btn-edit\" id=\"btnEdit\"  >  { isLoading ? <i className=\"fas fa-circle-notch fa-spin\"/> : ''}  Submit </button>\n                        <button type= \"button\" onClick={linkGen} className=\"btn-edit\" id=\"btnGen\"> Generate Link </button>\n                        \n\n                        </div>\n                           \n                        </div>\n                        \n                        <input type=\"text\" value={inputValue} className=\"form-edii\" disabled id=\"genLinkUrl\" />\n                    </form>\n             </div>\n         </div> \n        \n    )\n}\n\nexport default Home\n","import React from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction Retrive() {\n    const {id} = useParams()\n    axios(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`, {\n        method: \"GET\",\n        responseType: \"blob\"\n        //Force to receive data in a Blob Format\n        })\n        .then(response => {\n            //Create a Blob from the PDF Stream\n            const file = new Blob([response.data], {\n            type: \"application/pdf\"\n            });\n            //Build a URL from the file\n            const fileURL = URL.createObjectURL(file);\n            //Open the URL on new Window\n            window.open(fileURL);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n    return (\n    <div>\n        <h1 style={{margin:'20px'}}>Accept to open the popup to the file.</h1>\n    </div>\n    )\n}\n\nexport default Retrive\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './component/Home';\nimport Retrive from './component/Retrive';\n\nfunction App () {\n    return(\n     \n         <Router>\n             <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/verify/synlab/:id' component={Retrive}/>\n            <Route path='/ola' component={() => {return(\n\t\t<p>Homepage</p>\n\t);}}/>\n             </Switch>\n         </Router> \n   \n        \n    ) \n}\n\n\nexport default App ","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />,document.querySelector('#root'))"],"sourceRoot":""}