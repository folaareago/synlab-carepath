{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Retrive() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  axios(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`, {\n    method: \"GET\",\n    responseType: \"blob\" //Force to receive data in a Blob Format\n\n  }).then(response => {\n    //Create a Blob from the PDF Stream\n    const file = new Blob([response.data], {\n      type: \"application/pdf\"\n    }); //Build a URL from the file\n\n    const fileURL = URL.createObjectURL(file); //Open the URL on new Window\n\n    window.open(fileURL);\n  }).catch(error => {\n    console.log(error);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Accept to open the pop.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Retrive, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n\n_c = Retrive;\nexport default Retrive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Retrive\");","map":{"version":3,"sources":["/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js"],"names":["React","axios","useParams","Retrive","id","method","responseType","then","response","file","Blob","data","type","fileURL","URL","createObjectURL","window","open","catch","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AACAD,EAAAA,KAAK,CAAE,uDAAsDG,EAAG,EAA3D,EAA8D;AAC/DC,IAAAA,MAAM,EAAE,KADuD;AAE/DC,IAAAA,YAAY,EAAE,MAFiD,CAG/D;;AAH+D,GAA9D,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAI;AACd;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACF,QAAQ,CAACG,IAAV,CAAT,EAA0B;AACvCC,MAAAA,IAAI,EAAE;AADiC,KAA1B,CAAb,CAFc,CAKd;;AACA,UAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAhB,CANc,CAOd;;AACAO,IAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ;AACH,GAdL,EAeKK,KAfL,CAeWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAjBL;AAmBA,sBACA;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAKH;;GA1BQhB,O;UACQD,S;;;KADRC,O;AA4BT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction Retrive() {\n    const {id} = useParams()\n    axios(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`, {\n        method: \"GET\",\n        responseType: \"blob\"\n        //Force to receive data in a Blob Format\n        })\n        .then(response => {\n            //Create a Blob from the PDF Stream\n            const file = new Blob([response.data], {\n            type: \"application/pdf\"\n            });\n            //Build a URL from the file\n            const fileURL = URL.createObjectURL(file);\n            //Open the URL on new Window\n            window.open(fileURL);\n        })\n        .catch(error => {\n            console.log(error);\n        });\n\n    return (\n    <div>\n        <h1>Accept to open the pop.</h1>\n    </div>\n    )\n}\n\nexport default Retrive\n"]},"metadata":{},"sourceType":"module"}