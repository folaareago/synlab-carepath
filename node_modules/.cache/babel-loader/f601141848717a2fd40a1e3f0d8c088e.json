{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useParams } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Retrive() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  axios.get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`).then(response => {\n    if (response.status === \"200\") {\n      return response.data;\n      console.log(response.data);\n    } else {\n      console.log(\"Unable to upload file.\");\n    }\n  }).catch(error => console.error(error.message));\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Retrive, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n\n_c = Retrive;\nexport default Retrive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Retrive\");","map":{"version":3,"sources":["/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js"],"names":["React","useState","useParams","axios","Retrive","id","get","then","response","status","data","console","log","catch","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AAGAC,EAAAA,KAAK,CACAG,GADL,CACU,uDAAsDD,EAAG,EADnE,EAEKE,IAFL,CAEWC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,KAAxB,EAA+B;AAC3B,aAAOD,QAAQ,CAACE,IAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACH,KAHD,MAGO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACA,GATL,EAUKC,KAVL,CAUYC,KAAD,IAAWH,OAAO,CAACG,KAAR,CAAcA,KAAK,CAACC,OAApB,CAVtB;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAlBQX,O;UACQF,S;;;KADRE,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React, { useState,useParams } from 'react';\nimport axios from 'axios';\n\nfunction Retrive() {\n    const {id} = useParams();\n\n    \n    axios\n        .get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`)\n        .then((response) => { \n        if (response.status === \"200\") {\n            return response.data\n            console.log(response.data);\n        } else {\n            console.log(\"Unable to upload file.\");\n        }\n        })\n        .catch((error) => console.error(error.message));\n    return (\n        <div></div>\n    )\n}\n\nexport default Retrive\n"]},"metadata":{},"sourceType":"module"}