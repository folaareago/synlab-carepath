{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction Retrive() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [data, setData] = useState(null);\n  axios.get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`).then(response => {\n    if (response.status === 200) {\n      setData(response.data);\n    } else {\n      console.log(\"Unable to upload file.\");\n    }\n  }).catch(error => console.error(error.message));\n  return {\n    data\n  };\n}\n\n_s(Retrive, \"JbwrOI+tlpn6AXZK5SpMVNUQgaU=\", false, function () {\n  return [useParams];\n});\n\n_c = Retrive;\nexport default Retrive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Retrive\");","map":{"version":3,"sources":["/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js"],"names":["React","useState","axios","useParams","Retrive","id","data","setData","get","then","response","status","console","log","catch","error","message"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAGAC,EAAAA,KAAK,CACAM,GADL,CACU,uDAAsDH,EAAG,EADnE,EAEKI,IAFL,CAEWC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBJ,MAAAA,OAAO,CAACG,QAAQ,CAACJ,IAAV,CAAP;AACH,KAFD,MAEO;AACHM,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACA,GARL,EASKC,KATL,CASYC,KAAD,IAAWH,OAAO,CAACG,KAAR,CAAcA,KAAK,CAACC,OAApB,CATtB;AAUA,SACA;AAACV,IAAAA;AAAD,GADA;AAGH;;GAlBQF,O;UACQD,S;;;KADRC,O;AAoBT,eAAeA,OAAf","sourcesContent":["import React, { useState} from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction Retrive() {\n    const {id} = useParams()\n    const [data, setData] = useState(null)\n \n    \n    axios\n        .get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`)\n        .then((response) => { \n        if (response.status === 200) {\n            setData(response.data)\n        } else {\n            console.log(\"Unable to upload file.\");\n        }\n        })\n        .catch((error) => console.error(error.message));\n    return (\n    {data}\n    )\n}\n\nexport default Retrive\n"]},"metadata":{},"sourceType":"module"}