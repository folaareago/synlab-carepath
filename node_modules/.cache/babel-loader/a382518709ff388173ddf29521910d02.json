{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Retrive() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  axios.get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`).then(response => {\n    if (response.status === 200) {\n      console.log(response.data);\n      return response.data;\n    } else {\n      console.log(\"Unable to upload file.\");\n    }\n  }).catch(error => console.error(error.message));\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Retrive, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n  return [useParams];\n});\n\n_c = Retrive;\nexport default Retrive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Retrive\");","map":{"version":3,"sources":["/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js"],"names":["React","useState","axios","useParams","Retrive","id","get","then","response","status","console","log","data","catch","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACf,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AAGAD,EAAAA,KAAK,CACAI,GADL,CACU,uDAAsDD,EAAG,EADnE,EAEKE,IAFL,CAEWC,QAAD,IAAc;AACpB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,aAAOJ,QAAQ,CAACI,IAAhB;AAEH,KAJD,MAIO;AACHF,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH;AACA,GAVL,EAWKE,KAXL,CAWYC,KAAD,IAAWJ,OAAO,CAACI,KAAR,CAAcA,KAAK,CAACC,OAApB,CAXtB;AAYA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAnBQX,O;UACQD,S;;;KADRC,O;AAqBT,eAAeA,OAAf","sourcesContent":["import React, { useState} from 'react';\n\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nfunction Retrive() {\n    const {id} = useParams()\n \n    \n    axios\n        .get(`https://synlab-carepath.herokuapp.com/verify/synlab/${id}`)\n        .then((response) => { \n        if (response.status === 200) {\n            console.log(response.data);\n            return response.data\n            \n        } else {\n            console.log(\"Unable to upload file.\");\n        }\n        })\n        .catch((error) => console.error(error.message));\n    return (\n        <div></div>\n    )\n}\n\nexport default Retrive\n"]},"metadata":{},"sourceType":"module"}