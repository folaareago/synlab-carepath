{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useParams } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Retrive() {\n  _s();\n\n  const [inputValue, setInputValue] = useState('');\n  const [inputForm, setInputForm] = useState('');\n  const {\n    id\n  } = useParams();\n\n  const linkGen = async () => {\n    let pdfName = localStorage.getItem('synlab-name');\n    setInputValue(`https://rv.synlab-pathcare.com/verify/${pdfName}`);\n    localStorage.removeItem('synlab-name');\n  };\n\n  const upload = async e => {\n    e.preventDefault();\n    let formData = new FormData(); //formdata object\n\n    formData.append('pdf', inputForm); //append the values with key, value pair\n\n    const headers = {\n      'content-type': 'multipart/form-data'\n    };\n    axios.post(\"https://synlab-carepath.herokuapp.com/upload\", formData, {\n      headers: headers\n    }).then(response => {\n      if (response.status === \"200\") {\n        localStorage.setItem('synlab-name', response.data.name);\n        alert('Uploaded Succesfully');\n      } else {\n        console.log(\"Unable to upload file.\");\n      }\n    }).catch(error => console.error(error.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center pt-5 pb-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" UPLOAD SECTION\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          upload(e);\n        },\n        id: \"formElem\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"myFile\",\n          value: inputForm,\n          onChange: e => {\n            setInputForm(e.target.value);\n          },\n          className: \"uploadform\",\n          name: \"pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pad-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn-edit\",\n            id: \"btnEdit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: linkGen,\n            className: \"btn-edit\",\n            id: \"btnGen\",\n            children: \" Generate Link \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          className: \"form-edii\",\n          disabled: true,\n          id: \"genLinkUrl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Retrive, \"iVk8d3mWBDVAX5aMijj8yUv/sDM=\", false, function () {\n  return [useParams];\n});\n\n_c = Retrive;\nexport default Retrive;\n\nvar _c;\n\n$RefreshReg$(_c, \"Retrive\");","map":{"version":3,"sources":["/Users/mac/Desktop/Synlab-pathcare/synlabreact/src/component/Retrive.js"],"names":["React","useState","useParams","axios","Retrive","inputValue","setInputValue","inputForm","setInputForm","id","linkGen","pdfName","localStorage","getItem","removeItem","upload","e","preventDefault","formData","FormData","append","headers","post","then","response","status","setItem","data","name","alert","console","log","catch","error","message","target","value"],"mappings":"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","sourcesContent":["import React, { useState,useParams } from 'react';\nimport axios from 'axios';\n\nfunction Retrive() {\n    const [inputValue, setInputValue] = useState('') \n    const [inputForm, setInputForm] = useState('') \n    const {id} = useParams();\n    const linkGen = async () => {\n        let pdfName = localStorage.getItem('synlab-name');\n        setInputValue(`https://rv.synlab-pathcare.com/verify/${pdfName}`)\n        localStorage.removeItem('synlab-name')\n    }\n    const upload = async (e) => {\n        e.preventDefault();\n        let formData = new FormData();    //formdata object\n        formData.append('pdf', inputForm);   //append the values with key, value pair\n        const headers = { 'content-type': 'multipart/form-data' }\n        axios\n          .post(\"https://synlab-carepath.herokuapp.com/upload\", formData, { headers: headers})\n          .then((response) => { \n            if (response.status === \"200\") {\n              localStorage.setItem('synlab-name', response.data.name);\n              alert('Uploaded Succesfully')\n            } else {\n              console.log(\"Unable to upload file.\");\n            }\n          })\n          .catch((error) => console.error(error.message));\n      };\n    return (\n         <div>\n             <div className=\"container\">\n             <div className=\"text-center pt-5 pb-5\"> \n                        <h1> UPLOAD SECTION</h1>\n                    </div>\n                    <form onSubmit={(e)=>{upload(e)}} id=\"formElem\">   \n                        <input type=\"file\" id=\"myFile\" value={inputForm} onChange={e=>{setInputForm(e.target.value)}} className=\"uploadform\" name=\"pdf\" /> \n                        <div className=\"pad-top\">  \n                            <input type=\"submit\" className=\"btn-edit\" id=\"btnEdit\" />\n                            <button type= \"button\" onClick={linkGen} className=\"btn-edit\" id=\"btnGen\"> Generate Link </button>\n                        </div>\n                        \n                        <input type=\"text\" value={inputValue} className=\"form-edii\" disabled id=\"genLinkUrl\" />\n                    </form>\n             </div>\n         </div> \n        \n    )\n}\n\nexport default Retrive\n"]},"metadata":{},"sourceType":"module"}